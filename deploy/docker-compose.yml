version: "3.9"
services:
  postgres-catalog:
    image: postgres:16
    environment:
      POSTGRES_DB: catalog
      POSTGRES_USER: catalog
      POSTGRES_PASSWORD: catalog
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalog"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  config-server:
    build:
      context: ..
      dockerfile: config-server/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: native
    ports:
      - "8888:8888"

  service-discovery:
    build:
      context: ..
      dockerfile: service-discovery/Dockerfile
    ports:
      - "8761:8761"

  api-gateway:
    build:
      context: ..
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"

  catalog-service:
    build:
      context: ..
      dockerfile: catalog-service/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-catalog:5432/catalog
      SPRING_DATASOURCE_USERNAME: catalog
      SPRING_DATASOURCE_PASSWORD: catalog
    ports:
      - "8081:8081"
    depends_on:
      - postgres-catalog
      - redis

  cart-service:
    build:
      context: ..
      dockerfile: cart-service/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - redis
